{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","redux/dialogsReducer.tsx","redux/profileReducer.tsx","redux/reduxStore.tsx","components/Navbar/NavBar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Header/Header.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Setting/Setting.tsx","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogsData","id","name","messagesData","message","newMessageBody","dialogsReducer","state","action","type","body","push","ADD_POST","UPDATE_NEW_POST_TEXT","postData","messages","likeCount","messageForNewText","profileReducer","newPost","Date","getTime","PostText","newText","reducers","combineReducers","profilePage","dialogsPage","store","createStore","Navbar","className","s","nav","item","to","activeClassName","active","ProfileInfo","img","alt","src","descriptionBlock","Post","props","MyPosts","postsElements","map","p","postsBlock","onChange","e","text","target","value","changeNewTextCallback","onClick","addPost","posts","MyPostsContainer","getState","dispatch","updateNewPostActionCreator","addPostActionCreator","Profile","Header","header","Music","News","Setting","DialogItem","dialog","Message","Dialogs","dialogsElements","d","messageElements","messageObj","dialogs","dialogsItem","updateNewMessageBodyCreator","placeholder","sendMessage","DialogsContainer","sendMessageCreator","App","path","render","renderThree","ReactDOM","bind","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.289b730f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__fXNU1\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1oHnw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2z1le\",\"posts\":\"MyPosts_posts__1Kf-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__7J2Qu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Ri4G\"};","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport type DialogsActionsTypes = ReturnType<typeof sendMessageCreator> | ReturnType<typeof updateNewMessageBodyCreator>\r\n\r\n\r\nexport const sendMessageCreator = (body: string) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        body: body\r\n    } as const\r\n}\r\n\r\nexport const updateNewMessageBodyCreator = (body: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n\r\n    } as const\r\n}\r\n\r\nlet initialState = {\r\n        dialogsData: [\r\n            {id: 1, name: \"Dimych\"},\r\n            {id: 2, name: \"Andrew\"},\r\n            {id: 3, name: \"Sveta\"},\r\n            {id: 4, name: \"Sasha\"},\r\n            {id: 5, name: \"Victor\"},\r\n            {id: 6, name: \"Valery\"},\r\n            {id: 7, name: \"Masha\"},\r\n        ],\r\n        messagesData: [\r\n            {id: 1, message: \"Hi\"},\r\n            {id: 2, message: \"How is your It\"},\r\n            {id: 3, message: \"YO-yo\"},\r\n            {id: 4, message: \"YO-yo\"},\r\n            {id: 5, message: \"YO-yo\"},\r\n            {id: 6, message: \"я сделала map\"},\r\n        ],\r\n        newMessageBody: \"\",\r\n    };\r\n\r\nconst dialogsReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            state.newMessageBody = action.body;\r\n            return state;\r\n\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            state.newMessageBody = '';\r\n            state.messagesData.push({id: 6, message: body})\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n    export default dialogsReducer;","import {postDataType} from \"./store\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nexport type ProfileActionsTypes = ReturnType<typeof addPostActionCreator > | ReturnType<typeof updateNewPostActionCreator>\r\n\r\n\r\n\r\nexport const addPostActionCreator = (PostText: string) => {\r\n    return {\r\n        type: \"ADD-POST\",\r\n        PostText: PostText\r\n    } as const\r\n}\r\n\r\nexport const updateNewPostActionCreator = (newText: string) => {\r\n    return {\r\n        type: \"UPDATE-NEW-POST-TEXT\",\r\n        newText: newText\r\n    } as const\r\n}\r\n\r\n\r\n\r\nlet initialState = {\r\n        postData: [\r\n            {id: 1, messages: 'Hi How are you?', likeCount: 15},\r\n            {id: 2, messages: 'Its my first post?', likeCount: 29},\r\n            {id: 3, messages: 'Наш мап работает', likeCount: 29},\r\n        ],\r\n        messageForNewText: \"\",\r\n    };\r\n\r\nconst profileReducer = (state = initialState, action: any ) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: postDataType = {\r\n                id: new Date().getTime(),\r\n                messages: action.PostText,\r\n                likeCount: 0\r\n            }\r\n            state.postData.push(newPost);\r\n            state.messageForNewText = '';\r\n            return state;\r\n\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.messageForNewText = action.newText;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Message</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/setting\" activeClassName={s.active}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.img}>\r\n                <img alt=\"avatar\" src=\"https://blueballroom.net/wp-content/uploads/2019/02/Homepage-Slider-2-1400x430.jpg\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava+ description\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\n\r\ntype PostPropsType = {\r\n    messages: string\r\n    likeCount: number\r\n\r\n}\r\n\r\nconst Post = (props: PostPropsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img alt=\"\" src=\"https://modeland.ru/uploads/fotos/foto_2081.png\"/>\r\n            <span>{props.messages}</span>\r\n            <div>\r\n                <span>Like: {props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport { postDataType} from \"../../../redux/store\";\r\n\r\n\r\ntype MyPostsType= {\r\n    postData: Array<postDataType>\r\n    messages: string\r\n    changeNewTextCallback: (text: string)=> void\r\n    addPost: (PostText: string) => void\r\n}\r\n\r\nconst MyPosts = (props: MyPostsType) => {\r\n\r\n    let postsElements = props.postData.map((p: postDataType) => {\r\n        return <Post messages={p.messages} likeCount={p.likeCount}/>\r\n    })\r\n\r\n\r\n    let onAddPost = () => {\r\n            props.addPost(props.messages);\r\n       // props.dispatch(addPostActionCreator(props.messages))\r\n    }\r\n\r\nconst newTextChangeHandler = (e: ChangeEvent<HTMLTextAreaElement> )=> {\r\n\r\n        let text = e.target.value\r\n        props.changeNewTextCallback(text)\r\n   // props.dispatch(updateNewPostActionCreator( e.currentTarget.value))\r\n    }\r\n\r\n    return (<div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={newTextChangeHandler} value={props.messages}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostActionCreator} from \"../../../redux/profileReducer\"\r\nimport MyPosts from \"./MyPosts\";\r\n\r\ntype MyPostsContainerType= {\r\n   store:any\r\n}\r\n\r\nconst MyPostsContainer = (props: MyPostsContainerType) => {\r\n\r\n    let state = props.store.getState()\r\n\r\n    let addPost = (PostText: string) => {\r\n      //      props.addPost(props.messages);\r\n        props.store.dispatch(addPostActionCreator(PostText))\r\n    }\r\n\r\nconst newTextChangeHandler = (newText: string )=> {\r\n       // props.changeNewTextCallback(e.currentTarget.value)\r\n    props.store.dispatch(updateNewPostActionCreator(newText))\r\n    }\r\n\r\n    return <MyPosts changeNewTextCallback={newTextChangeHandler} addPost={addPost} postData={state.profilePage.postData} messages={state.profilePage.messageForNewText}/>\r\n\r\n}\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\ntype ProfilePropsType ={\r\n    store : any\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer store={props.store} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (<header className={s.header}>\r\n            <img src=\"https://play-lh.googleusercontent.com/VxgLB5szQfCHqVidFh7ltB5_ch0Q7hbemn2TKWWshnBdMRYTciFdF_H6qEUPZJ6baQ\" alt=\"logo\"/>\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nconst Music = () => {\r\n    return ( <div>\r\n            Здесь будет Music\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\n\r\nconst News = () => {\r\n    return ( <div>1</div>\r\n\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\n\r\nconst Setting = () => {\r\n    return ( <div>\r\n            Здесь будут Settings\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Setting;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nexport type propsDialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem = (props: propsDialogsType) => {\r\n    return (<div className={s.dialog}>\r\n        <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nexport type MessagePropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message;","import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {\r\n    dialogsDataType,\r\n    dialogsPageType,\r\n    messagesDataType,\r\n} from \"../../redux/store\";\r\n\r\n\r\ntype DialogsPropsType = {\r\n    updateNewMessageBodyCreator: (body: string)=> void\r\n    sendMessage: (body: string)=>void\r\n    dialogsPage: dialogsPageType\r\n}\r\n\r\n\r\nconst Dialogs = (props:DialogsPropsType) => {\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogsData.map((d:dialogsDataType) => {\r\n        return <DialogItem name={d.name} id={d.id}/>\r\n    })\r\n    let messageElements = state.messagesData.map((messageObj:messagesDataType) => {\r\n        return <Message message={messageObj.message}/>\r\n    })\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n    props.sendMessage(newMessageBody)\r\n//props.dispatch(sendMessageCreator(props.dialogsPage.newMessageBody))\r\n    }\r\n    let onNewMessageChange =(e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.target.value\r\n        props.updateNewMessageBodyCreator(body)\r\n        //props.dispatch(updateNewMessageBodyCreator(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <div>\r\n                    <div><textarea onChange={onNewMessageChange} value={newMessageBody} placeholder='Enter your message'></textarea></div>\r\n                    <div> <button onClick={onSendMessageClick}>Send</button></div>\r\n                </div>\r\n            </div>\r\n           </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogsReducer\"\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\ntype DialogsContainerPropsType = {\r\n    store: any\r\n}\r\n\r\nconst DialogsContainer = (props:DialogsContainerPropsType) => {\r\n\r\n    let state = props.store.getState().dialogsPage\r\n\r\n\r\n    let onSendMessageClick = (body: string) => {\r\n        props.store.dispatch(sendMessageCreator(body))\r\n    }\r\n    let onNewMessageChange =(body: string) => {\r\n        props.store.dispatch(updateNewMessageBodyCreator(body))\r\n    }\r\n\r\n    return <Dialogs updateNewMessageBodyCreator={onNewMessageChange} sendMessage={onSendMessageClick} dialogsPage={state} />\r\n}\r\n\r\nexport default DialogsContainer;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/NavBar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Header from \"./components/Header/Header\";\nimport {Route} from \"react-router-dom\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Setting from \"./components/Setting/Setting\";\nimport {ActionsTypes} from \"./redux/store\";\nimport {RootStateType} from \"./redux/store\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\n\ntype AppPropsType = {\n    store: any\n    state: RootStateType\n    dispatch: (action: ActionsTypes) => void\n}\n\n\n\nconst App = (props:AppPropsType ) => {\n\n    return (\n\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path=\"/dialogs\"\n                           render={ () => <DialogsContainer store={props.store}  />} />\n                    <Route path=\"/profile\"\n                           render={ () => <Profile store={props.store} /> } />\n                    <Route path=\"/news\"\n                           render={ () => <News />} />\n                    <Route path=\"/music\"\n                           render={ () => <Music />} />\n                    <Route path=\"/setting\"\n                           render={ () => <Setting />} />\n                </div>\n            </div>\n\n\n)\n    ;\n}\n\n\nexport default App;\n\n","\nimport './index.css';\nimport store from \"./redux/reduxStore\"\nimport {RootStateType} from \"./redux/store\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport React from \"react\";\n\n\n\n\nconst renderThree = (state: RootStateType) => {\n    ReactDOM.render(\n\n        <BrowserRouter>\n\n            <App  state={state} dispatch={store.dispatch.bind(store)}  store={store}/>\n        </BrowserRouter>, document.getElementById('root'));\n}\nrenderThree(store.getState());\n\nstore.subscribe(() => {\n    let state = store.getState()\n    renderThree(state)\n});\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1cbQa\",\"item\":\"Navbar_item__27jJm\",\"active\":\"Navbar_active__3s4iD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__WUDgD\",\"dialogsItem\":\"Dialogs_dialogsItem__3PXha\",\"active\":\"Dialogs_active__iIunf\",\"dialog\":\"Dialogs_dialog__2Jv0U\",\"messages\":\"Dialogs_messages__3vsBP\",\"message\":\"Dialogs_message__3Rc3J\"};"],"sourceRoot":""}